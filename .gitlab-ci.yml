include:
  - project: 'apploket/apploket/android/gitlab-ci_cd'
    ref: main
    file:
      - 'android_sdk_setup.yml'

# This local template sets up the needed variables such as the android compile sdk and keystore
.project-android-setup:
  extends: .android-sdk-setup
  variables:
    # ANDROID_BUILD_TOOLS should match build.gradle.kts buildToolsVersion.
    ANDROID_BUILD_TOOLS: "31.0.0"
  script:
    - !reference [ .android-sdk-setup, script ]

workflow:
  # Pipeline only runs for:
  ## Merge requests
  ## Merges to develop
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: always

stages:
  - build
  - test
  - verify

# Check linting for all MRs
lint:debug:
  extends:
    - .project-android-setup
  interruptible: true
  stage: build
  only:
    - merge_requests
  tags:
    - mac
  script:
    - !reference [ .project-android-setup, script ]
    - git fetch
    - git merge origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - ./gradlew -Pci --console=plain :app:lintDevDebug -PbuildDir=lint -Pjob.token=$CI_JOB_TOKEN --stacktrace
  artifacts:
    paths:
      - app/lint/reports/
    expire_in: 1 week

# Assemble builds during MR's
assemble:mergeRequest:
  extends:
    - .project-android-setup
  interruptible: true
  stage: build
  only:
    - merge_requests
  tags:
    - mac
  script:
    - !reference [ .project-android-setup, script ]
    - git fetch
    - git merge origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - ./gradlew assembleDevDebug -Pjob.token=$CI_JOB_TOKEN
  artifacts:
    paths:
      - app/build/outputs/
      - app/build/generated/res/google-services/
    expire_in: 1 week

# Assemble all flavors
assemble:
  extends:
    - .project-android-setup
  interruptible: true
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
  tags:
    - mac
  script:
    - !reference [ .project-android-setup, script ]
    - ./gradlew assembleDevRelease -Pjob.token=$CI_JOB_TOKEN
  artifacts:
    paths:
      - app/build/outputs/
      - app/build/generated/res/google-services/
    expire_in: 1 week

# Run all tests for all MRs. If any fails, interrupt the pipeline (fail it)
test:debug:
  extends:
    - .project-android-setup
  interruptible: true
  stage: test
  only:
    - merge_requests
    - develop
  tags:
    - mac
  script:
    - !reference [ .project-android-setup, script ]
    - git fetch
    - if test -z "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"; then echo "No merge request, no need to merge target branch."; else git merge origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME; fi
    - ./gradlew -Pci --console=plain :app:testDevDebug -Pjob.token=$CI_JOB_TOKEN
  artifacts:
    when: always
    reports:
      junit: app/build/test-results/**/TEST-*.xml
    paths:
      - app/build/test-results/
    expire_in: 1 week